# 415. Add Strings
Given two non-negative integers num1 and num2 represented as string, return the sum of num1 and num2.

Note:

The length of both num1 and num2 is < 5100.
Both num1 and num2 contains only digits 0-9.
Both num1 and num2 does not contain any leading zero.
You must not use any built-in BigInteger library or convert the inputs to integer directly.

## Explanation
string operation, the break condition is check while(i>=0 || j>=0) . The reason using or indtead of and is that they are repeating check.

### Solution 1:
```java
class Solution {
    public String addStrings(String num1, String num2) {
        StringBuilder builder = new StringBuilder();
        int i = num1.length()-1;
        int j = num2.length()-1;
        int carry = 0;
        while(i>=0 || j>=0){
            //cal
            int dig1=0, dig2 = 0;
            if(i>=0)
                dig1 = num1.charAt(i)-'0';
            else
                dig1 = 0;
            if(j>=0)
                dig2 = num2.charAt(j)-'0';
            else
                dig2 = 0;
            
            int sumDig = dig1+dig2 + carry;
            int dig = 0;
            if(sumDig>=10){
                carry = 1;
                dig = sumDig - 10;
            }else{
                carry = 0;
                dig = sumDig;
            }
//System.out.println(dig);
            char c =(char)(dig+'0');
            builder.append(c);
            i--; j--;
            //System.out.println(builder.toString());
        }
        
         if(carry==1)
            builder.append('1');
        return builder.reverse().toString();
    }
}
```
