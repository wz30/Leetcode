/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean isValidBST(TreeNode root) {
        System.out.println( Integer.MIN_VALUE);
        if(root == null) return true;
        if(root.left == null && root.right == null) return true; 
        return isValid(root,Long.MIN_VALUE, Long.MAX_VALUE);
    }
    public boolean isValid(TreeNode root, long min, long max) {
        if(root==null) return true;
        if(root.val<=min || root.val>=max) {  //if the value of current node is not in the range of (min, max)
            return false;
        }
        return isValid(root.left, min, root.val)&&isValid(root.right,root.val, max);
            
        
    }
}

//zoom in the range
// Integer.MIN_VALUE = -2147483648;
// Integer.MAX_VALUE = 2147483647;
//BST: all left descendents <= n < all right decendaents.
