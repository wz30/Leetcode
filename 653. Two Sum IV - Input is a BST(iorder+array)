/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    List<Integer> res = new ArrayList<Integer>();
    public boolean findTarget(TreeNode root, int k) {
        if(root == null) return false;
        inorder(root);
        Integer[] wrapperArr = res.toArray(new Integer[res.size()]); 
        
        //if(k < wrapperArr[0]) return false;
        int i = 0; 
        for(i = 0; i < wrapperArr.length; i++) {
            int temp = k - wrapperArr[i];
            for(int j = wrapperArr.length - 1; j > i; j--) {
                if(temp==wrapperArr[j]) return true;
            }
        }
        if(i==wrapperArr.length) return false;
        return true;
    }
    public void inorder(TreeNode node) {
        if(node == null) return;
        
        inorder(node.left);
        res.add(node.val);
        inorder(node.right);
    }
   
    
}

//idea bst: in order
//search use binary search
//1.get the inorder with ascending order--array
//2. deal with the array
