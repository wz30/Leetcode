time complexixity for brute force mathod
string s and String p


O(n)
class Solution {
    int[] t2 = new int[26];
    int[] t1 = new int[26];
    public List<Integer> findAnagrams(String s, String p) {
        List<Integer> res = new ArrayList<>();
        
        int n1 = s.length();
        int n2 = p.length();
        for(int i = 0; i<p.length(); i++)
        {
            t2[p.charAt(i)-'a']++;
        }
        
        for(int i = 0; i<n1; i++)
        {
            if(i>=n2) t1[s.charAt(i-n2)-'a']--;
            t1[s.charAt(i)-'a']++;
            if(Arrays.equals(t1, t2))
                res.add(i-n2+1);
            
            
        }
        return res;
    }
    
}



reference for general substring
https://leetcode.com/problems/minimum-window-substring/discuss/26808/here-is-a-10-line-template-that-can-solve-most-substring-problems
